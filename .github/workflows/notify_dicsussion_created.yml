name: Notify Slack on Discussion Created

on:
  discussion:
    types: [created]
    
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout default branch
      # スクリプトファイルにアクセスするためチェックアウト 
      uses: actions/checkout@v4


    - name: Setup Node.js
      # スクリプト実行のためNodeを準備
      uses: actions/setup-node@v4
      with:
        node-version: '22'  # 最新のLTSバージョンを使用

    - name: Install dependencies
      run: |
        npm init -y
        npm install marked

    - name: Convert Markdown to mrkdwn
      # markdownをmrkdwnに変換するスクリプトを実行
      id: mrkdwn
      run: |
          node .github/scripts/convertMarkdownToMrkdwn.js "${{ github.event.discussion.body }}" >> $GITHUB_ENV

    - name: Convert Mention
      # GitHubのメンションをSlackメンションに変換するスクリプトを実行 
      id: mention
      run: |
          node .github/scripts/convertMentions.js '${{ env.commentBody }}' >> $GITHUB_ENV

    - name: Sanitize Discussion Title
      # discussionタイトルのバッククォートをエスケープする
      id: sanitize-discussion-title
      run: |
          node .github/scripts/sanitizeTitleBackquote.js '${{ github.event.discussion.title }}' >> $GITHUB_ENV

    - name: Determine Slack Webhook URL
      # Slackの通知先を決定
      id: determine_url
      run: |
        CATEGORY_NAME="${{ github.event.discussion.category.name }}"
        WEBHOOK_URLS=()
        if [[ "$CATEGORY_NAME" == *"FE"* ]]; then
          WEBHOOK_URLS+=("${{ secrets.SLACK_WEBHOOK_URL_FE }}")
        fi
        if [[ "$CATEGORY_NAME" == *"BE"* ]]; then
          WEBHOOK_URLS+=("${{ secrets.SLACK_WEBHOOK_URL_BE }}")
        fi
        if [[ "$CATEGORY_NAME" == *"FE"* && "$CATEGORY_NAME" == *"BE"* ]]; then
          WEBHOOK_URLS+=("${{ secrets.SLACK_WEBHOOK_URL_MAINTAINER }}")
        elif [[ ${#WEBHOOK_URLS[@]} -eq 0 ]]; then
          WEBHOOK_URLS+=("${{ secrets.SLACK_WEBHOOK_URL_MAINTAINER }}")
        fi
        echo "WEBHOOK_URLS=${WEBHOOK_URLS[@]}" >> $GITHUB_ENV
    
    - name: Send notification to Slack
      # Slackに通知を送信する
      env:
        SLACK_WEBHOOK_URLS: ${{ env.WEBHOOK_URLS }}
      run: |
        COMMENT_URL="${{ github.event.discussion.html_url }}"
        COMMENT_BODY="${{ env.commentBody }}"
        COMMENT_CREATED_AT="${{ github.event.discussion.created_at }}"
        DISCUSSION_NUMBER="${{ github.event.discussion.number }}"
        DISCUSSION_TITLE="${{ env.sanitizedTitle }}"
        DISCUSSION_URL="${{ github.event.discussion.html_url }}"
        DISCUSSION_CATEGORY="${{ github.event.discussion.category.name }}"
        REPOSITORY_URL="${{ github.event.repository.html_url }}"
        REPOSITORY_NAME="${{ github.event.repository.full_name }}"
        COMMENT_USER="${{ github.event.discussion.user.login }}"
        COMMENT_USER_AVATAR="${{ github.event.discussion.user.avatar_url }}"
        COMMENT_USER_URL="${{ github.event.discussion.user.url }}"
        
        
        # Slackに送信する JSON payload を作成
        PAYLOAD=$(jq -n --arg url "$COMMENT_URL" \
                        --arg body "$COMMENT_BODY" \
                        --arg created_at "$COMMENT_CREATED_AT" \
                        --arg discussion_number "$DISCUSSION_NUMBER" \
                        --arg discussion_title "$DISCUSSION_TITLE" \
                        --arg discussion_url "$DISCUSSION_URL" \
                        --arg discussion_category "$DISCUSSION_CATEGORY" \
                        --arg repository_url "$REPOSITORY_URL" \
                        --arg repository_name "$REPOSITORY_NAME" \
                        --arg comment_user "$COMMENT_USER" \
                        --arg comment_user_avatar "$COMMENT_USER_AVATAR" \
                        --arg comment_user_url "$COMMENT_USER_URL" \
                        --arg ts "$COMMENT_TIMESTAMP" '{
          "username": "GitHub Discussions",
          "icon_url": "https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png",
          "text": "New discussion created by <\($discussion_url)|\($comment_user)>",
          "blocks":[
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text":  "*New discussion <\($discussion_url)|#\($discussion_number) \($discussion_title)>*"
                  }  
                }
          ],
          "attachments": [
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text":  "#\($discussion_number) \($discussion_title)"
                  }  
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text":  $body
                  }  
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "image",
                      "image_url":  $comment_user_avatar,
                      "alt_text": "icon"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*\($comment_user)*  \($discussion_category)  \($repository_name)"
                    }
                  ]  
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                          "type": "plain_text",
                          "text": "Discussionsで開く"

                      },
                      "url":  $url
                    }
                  ]
                }
              ]
            }
          ]
          
        }')
        
        # 各 Slack webhook URL に作成した JSON payload を送信
        for WEBHOOK_URL in $WEBHOOK_URLS; do
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" $WEBHOOK_URL
        done
