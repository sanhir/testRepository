name: Convert Markdown to mrkdwn

on: [ workflow_dispatch ]
jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # 最新のLTSバージョンを使用

      - name: Install dependencies
        run: |
          npm init -y
          npm install marked

      - name: Convert Markdown to mrkdwn
        run: |
          echo 'const marked = require("marked");

          function markdownToHtml(markdown) {
            return marked.parse(markdown);
          }

          function htmlToMrkdwn(html) {
            return html
              .replace(/<strong>(.*?)<\/strong>/g, "*$1*")
              .replace(/<em>(.*?)<\/em>/g, "_$1_")
              .replace(/<code>(.*?)<\/code>/g, "`$1`")
              .replace(/<pre><code>(.*?)<\/code><\/pre>/g, "```\n$1\n```")
              .replace(/<a href=\\"(.*?)\\">(.*?)<\/a>/g, "<$1|$2>")
              .replace(/<h1>(.*?)<\/h1>/g, "*$1*\n")
              .replace(/<h2>(.*?)<\/h2>/g, "*$1*\n")
              .replace(/<h3>(.*?)<\/h3>/g, "*$1*\n")
              .replace(/<ul>(.*?)<\/ul>/gs, (match, p1) => p1.replace(/<li>(.*?)<\/li>/g, "• $1\n"))
              .replace(/<ol>(.*?)<\/ol>/gs, (match, p1) => p1.replace(/<li>(.*?)<\/li>/g, "1. $1\n"))
              .replace(/<p>(.*?)<\/p>/g, "$1\n")
              .replace(/<br>/g, "\n")
              .replace(/<\/?[^>]+(>|$)/g, "");
          }

          function markdownToMrkdwn(markdown) {
            const html = markdownToHtml(markdown);
            return htmlToMrkdwn(html);
          }

          const markdownText = `
          # 見出し1
          ## 見出し2
          ### 見出し3

          これは**太字**のテキストです。
          これは*斜体*のテキストです。
          これは\`コード\`です。

          \`\`\`
          これはコードブロックです。
          \`\`\`

          - リストアイテム1
          - リストアイテム2

          1. 番号付きリストアイテム1
          2. 番号付きリストアイテム2

          [リンク](https://example.com)
          `;

          console.log(markdownToMrkdwn(markdownText));' > convert.js
          node convert.js